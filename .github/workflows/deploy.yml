# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Production deployment

on:
  workflow_dispatch:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "production" ]

permissions:
  contents: read

jobs:
  # build-frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-node@v3
  #   - name: Run install
  #     uses: borales/actions-yarn@v4
  #     with:
  #       dir: 'frontend'
  #       cmd: install
  #   - name: Run build
  #     uses: borales/actions-yarn@v4
  #     with:
  #       dir: 'frontend'
  #       cmd: build
  #   - name: Deploy files
  #     uses: appleboy/scp-action@v0.1.4
  #     with:
  #       host: ${{ secrets.HOST }}
  #       username: ${{ secrets.UBUNTU_USERNAME }}
  #       key: ${{ secrets.SSH_KEY }}
  #       source: "frontend/dist/"
  #       target: "/chorister/www"
  #       strip_components: 2
  #       rm: true

  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: backend
    - name: Build with Gradle
      run: ./gradlew bootJar
      working-directory: backend
    - name: Deploy .jar
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.UBUNTU_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        source: "backend/build/libs/chorister.jar"
        target: "/chorister/bin"
        strip_components: 3

  # db-migration: 
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Migrate DB changes
  #     uses: liquibase-github-actions/update@v4.23.0
  #     with:        
  #       url: "jdbc:postgresql://common-werebat-6703.7tc.cockroachlabs.cloud:26257/chorister"
  #       classpath: "backend/src/main/resources"
  #       changelogFile: "backend/src/main/resources/db/changelog/changelog-master.yaml"
  #       username: "${{ secrets.PRODUCTION_DB_USERNAME }}"
  #       password: "${{ secrets.PRODUCTION_DB_PASSWORD }}"
  #       driver: "org.postgresql.Driver"
