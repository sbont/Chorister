services:
  crdb:
    image: "cockroachdb/cockroach:latest-v24.3"
    ports:
      - "26257:26257"
      - "8080:8080"
    command: start-single-node --insecure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'
    volumes:
      - "./data/crdb:/cockroach/cockroach-data"

  s3:
    image: "minio/minio"
    ports: 
      - "9011:9000"
      - "9012:9001"
    command: server /data --console-address :9001
    volumes:
      - "./data/s3:/data"

  zitadel:
    restart: "always"
    networks:
      - "zitadel"
    image: "ghcr.io/zitadel/zitadel:latest"
    command: "start-from-init --masterkey 'MasterkeyNeedsToHave32Characters' --tlsMode disabled"
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: pgdb
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: false
    depends_on:
      pgdb:
        condition: "service_healthy"
    ports:
      - "9000:8080"
    volumes:
      - "./data/pgdb:/var/lib/postgresql/data:rw"

  pgdb:
    restart: "always"
    image: postgres:17-alpine
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - "zitadel"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: "10s"
      timeout: "30s"
      retries: 5
      start_period: "20s"
networks:
  zitadel: